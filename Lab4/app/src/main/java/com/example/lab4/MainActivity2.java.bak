package com.example.lab4;

import static android.content.ContentValues.TAG;

import android.app.DatePickerDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.RadioGroup;
import android.widget.RadioButton;

import androidx.appcompat.app.AppCompatActivity;

import com.example.lab4.Palton;

import java.io.File;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class MainActivity2 extends AppCompatActivity {

    private TextView textViewSelectedDate;
    private EditText editTextCuloare;
    private TextView editTextPret, editTextMaterial;
    private Switch switchImpermeabil;
    private RadioGroup radioGroupMarime;
    private Date selectedDate;

    private Palton paltonToEdit; // Obiectul pe care îl edităm (dacă există)

    private void salveazaPaltonInFisier(Palton palton) {
        try {
            FileOutputStream fos = openFileOutput("paltoane.txt", MODE_APPEND);
            ObjectOutputStream oos;

            File file = new File(getFilesDir(), "paltoane.txt");
            if (file.length() == 0) {
                oos = new ObjectOutputStream(fos); // Primul obiect - scrie header
            } else {
                oos = new AppendableObjectOutputStream(fos); // Fără header
            }

            oos.writeObject(palton);
            oos.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);

        // Legătura între view-uri și componente
        Button buttonSelectDate = findViewById(R.id.buttonSelectDate);
        Button buttonSave = findViewById(R.id.button2);
        textViewSelectedDate = findViewById(R.id.textView7);
        editTextCuloare = findViewById(R.id.editTextText);
        editTextPret = findViewById(R.id.textView4);
        editTextMaterial = findViewById(R.id.textView5);
        switchImpermeabil = findViewById(R.id.switch1);
        radioGroupMarime = findViewById(R.id.radioGroup);

        // Aplicarea setărilor salvate (culoare + dimensiune text)

        SharedPreferences prefs = getSharedPreferences("app_settings", MODE_PRIVATE);
        String dimensiune = prefs.getString("text_size", "16");  // Valoare implicită: 16
        String textColor = prefs.getString("text_color", "black");  // Valoare implicită: black
        float fontSize = Float.parseFloat(dimensiune);


// Aplicarea culorii textului
        switch (textColor) {
            case "Rosu":
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.holo_red_light));
                editTextPret.setTextColor(getResources().getColor(android.R.color.holo_red_light));
                editTextMaterial.setTextColor(getResources().getColor(android.R.color.holo_red_light));
                textViewSelectedDate.setTextColor(getResources().getColor(android.R.color.holo_red_light));
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.holo_red_light));
                switchImpermeabil.setTextColor(getResources().getColor(android.R.color.holo_red_light));
                break;
            case "Verde":
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.holo_green_light));
                editTextPret.setTextColor(getResources().getColor(android.R.color.holo_green_light));
                editTextMaterial.setTextColor(getResources().getColor(android.R.color.holo_green_light));
                textViewSelectedDate.setTextColor(getResources().getColor(android.R.color.holo_green_light));
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.holo_green_light));
                switchImpermeabil.setTextColor(getResources().getColor(android.R.color.holo_green_light));
                break;
            case "Albastru":
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.holo_blue_light));
                editTextPret.setTextColor(getResources().getColor(android.R.color.holo_blue_light));
                editTextMaterial.setTextColor(getResources().getColor(android.R.color.holo_blue_light));
                textViewSelectedDate.setTextColor(getResources().getColor(android.R.color.holo_blue_light));
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.holo_blue_light));
                switchImpermeabil.setTextColor(getResources().getColor(android.R.color.holo_blue_light));
                break;
            default:
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.black));
                editTextPret.setTextColor(getResources().getColor(android.R.color.black));
                editTextMaterial.setTextColor(getResources().getColor(android.R.color.black));
                textViewSelectedDate.setTextColor(getResources().getColor(android.R.color.black));
                editTextCuloare.setTextColor(getResources().getColor(android.R.color.black));
                switchImpermeabil.setTextColor(getResources().getColor(android.R.color.black));
                break;
        }

// Setează dimensiunea fontului
        editTextCuloare.setTextSize(fontSize);
        editTextPret.setTextSize(fontSize);
        editTextMaterial.setTextSize(fontSize);



        // Extragem obiectul Palton din Intent dacă există (pentru editare)
        paltonToEdit = getIntent().getParcelableExtra("palton");

        // Verificăm dacă avem un palton pentru editare
        if (paltonToEdit != null) {
            // Prepopulăm câmpurile cu valorile obiectului existent
            editTextCuloare.setText(paltonToEdit.getCuloare());
            editTextPret.setText(paltonToEdit.getPret());
            //editTextMaterial.setText(paltonToEdit.getMaterial());
            switchImpermeabil.setChecked(paltonToEdit.isImpermeabil());

            CheckBox checkBoxLana = findViewById(R.id.checkBox);
            CheckBox checkBoxBumbac = findViewById(R.id.checkBox2);
            CheckBox checkBoxLanaBumbac = findViewById(R.id.checkBox3);

            checkBoxLana.setChecked(false);
            checkBoxBumbac.setChecked(false);
            checkBoxLanaBumbac.setChecked(false);

            String material = paltonToEdit.getMaterial();
            Log.d("Materialul meu ramas este:","Material "+ material);
            checkBoxLana.setChecked(material.contains("Lana"));
            checkBoxBumbac.setChecked(material.contains("Bumbac"));
            checkBoxLanaBumbac.setChecked(material.contains("Poliester"));

            String marime = paltonToEdit.getMarime();
            RadioButton radioButton1 = findViewById(R.id.radiobutton1);
            RadioButton radioButton2 = findViewById(R.id.radiobutton2);
            RadioButton radioButton3 = findViewById(R.id.radiobutton3);
            radioButton1.setChecked(false);
            radioButton2.setChecked(false);
            radioButton3.setChecked(false);

// Setăm doar radio button-ul care corespunde mărimii preluate
            if (marime.equals("S")) {
                radioButton1.setChecked(true);
            } else if (marime.equals("M")) {
                radioButton2.setChecked(true);
            } else if (marime.equals("L")) {
                radioButton3.setChecked(true);
            }

            // Preluăm data existentă
            selectedDate = paltonToEdit.getDataAdaugare();  // Preluăm data deja setată
            Log.d("MainActivity2", "Data preluată din paltonToEdit: " + selectedDate.toString()); // Log pentru data preluată
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            textViewSelectedDate.setText("Data selectată: " + dateFormat.format(selectedDate));

            // Modificăm titlul activității pentru a reflecta editarea
            setTitle("Editare Palton");
        } else {
            // Dacă nu există niciun Palton, lăsăm câmpurile goale pentru adăugare
            setTitle("Adăugare Palton");

            // Setăm data curentă dacă nu există un palton de editat
            // Dacă paltonToEdit nu este null, folosim data existentă
            if (paltonToEdit != null && paltonToEdit.getDataAdaugare() != null) {
                selectedDate = paltonToEdit.getDataAdaugare();
            } else {
                // Dacă nu există o dată, folosim data curentă
                Calendar calendar = Calendar.getInstance();
                selectedDate = calendar.getTime();
            }

            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            textViewSelectedDate.setText("Data selectată: " + dateFormat.format(selectedDate));

        }

        // Configurăm comportamentul butonului de selectare a datei
        buttonSelectDate.setOnClickListener(v -> {
            Calendar today = Calendar.getInstance();
            int year = today.get(Calendar.YEAR);
            int month = today.get(Calendar.MONTH);
            int day = today.get(Calendar.DAY_OF_MONTH);

            DatePickerDialog datePickerDialog = new DatePickerDialog(
                    MainActivity2.this,
                    (view, selectedYear, selectedMonth, selectedDay) -> {
                        Calendar selectedCal = Calendar.getInstance();
                        selectedCal.set(selectedYear, selectedMonth, selectedDay);
                        selectedDate = selectedCal.getTime();
                        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                        textViewSelectedDate.setText("Data selectată: " + dateFormat.format(selectedDate));
                    },
                    year, month, day
            );

            // Setăm limita maximă a datei pentru a nu selecta o dată viitoare
            datePickerDialog.getDatePicker().setMaxDate(System.currentTimeMillis());
            datePickerDialog.show();
        });

        // Salvăm obiectul Palton (fie adăugăm, fie modificăm)
        buttonSave.setOnClickListener(v -> {
            String culoare = editTextCuloare.getText().toString();
            String pret = editTextPret.getText().toString();
            //String material = editTextMaterial.getText().toString();
            boolean impermeabil = switchImpermeabil.isChecked();

            CheckBox checkBoxLana = findViewById(R.id.checkBox);
            CheckBox checkBoxBumbac = findViewById(R.id.checkBox2);
            CheckBox checkBoxLanaBumbac = findViewById(R.id.checkBox3);

            StringBuilder materialBuilder = new StringBuilder();

            if (checkBoxLana.isChecked()) {
                materialBuilder.append("Lana, ");
            }
            if (checkBoxBumbac.isChecked()) {
                materialBuilder.append("Bumbac, ");
            }
            if (checkBoxLanaBumbac.isChecked()) {
                materialBuilder.append("Poliester, ");
            }

            // Eliminăm ultima virgulă și spațiu, dacă există
            if (materialBuilder.length() > 0) {
                materialBuilder.setLength(materialBuilder.length() - 2);
            }

            String material = materialBuilder.toString();

            // Obținem mărimea selectată din RadioGroup
            RadioButton radioButton1 = findViewById(R.id.radiobutton1);
            RadioButton radioButton2 = findViewById(R.id.radiobutton2);
            RadioButton radioButton3 = findViewById(R.id.radiobutton3);

            Log.d("Material final", "Materialul selectat este: " + material);
            // Verificăm care radio button este selectat
            String marime = "";
            if (radioButton1.isChecked()) {
                marime = "S";  // Radio button-ul 1 este selectat
            } else if (radioButton2.isChecked()) {
                marime = "M";  // Radio button-ul 2 este selectat
            } else if (radioButton3.isChecked()) {
                marime = "L";  // Radio button-ul 3 este selectat
            }

            // Log pentru a vedea ce mărime am selectat
            Log.d("Ceva.......", "Marimea pe care o setez: " + marime);
            // Dacă edităm un obiect existent, actualizăm valorile acestuia
            if (paltonToEdit != null) {
                paltonToEdit.setCuloare(culoare);
                paltonToEdit.setPret(pret);
                paltonToEdit.setMaterial(material);
                paltonToEdit.setImpermeabil(impermeabil);
                paltonToEdit.setMarime(marime);

                paltonToEdit.setDataAdaugare(selectedDate); // Menținem data la modificare
            } else {
                // Dacă nu există un obiect, creăm unul nou
                paltonToEdit = new Palton(culoare, impermeabil, marime, pret, material, selectedDate);
            }

            // Trimitem obiectul (adăugat sau modificat) înapoi către MainActivity
            salveazaPaltonInFisier(paltonToEdit);

            Intent intent = new Intent();
            intent.putExtra("palton", paltonToEdit);

            // Dacă edităm, trimitem și poziția elementului
            int position = getIntent().getIntExtra("position", -1);
            if (position != -1) {
                intent.putExtra("position", position);
            }

            setResult(RESULT_OK, intent);
            finish();
        });
    }
}
